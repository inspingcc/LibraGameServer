// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/req_server_regist.proto

package com.insping.libra.proto;

public final class ReqServerRegist {
  private ReqServerRegist() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ServerRegistDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.ServerRegistData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 serverID = 1;</code>
     */
    int getServerID();

    /**
     * <code>string serverName = 2;</code>
     */
    String getServerName();
    /**
     * <code>string serverName = 2;</code>
     */
    com.google.protobuf.ByteString
        getServerNameBytes();

    /**
     * <code>string serverKey = 3;</code>
     */
    String getServerKey();
    /**
     * <code>string serverKey = 3;</code>
     */
    com.google.protobuf.ByteString
        getServerKeyBytes();

    /**
     * <code>int32 serverType = 4;</code>
     */
    int getServerType();

    /**
     * <code>int32 serverStatus = 5;</code>
     */
    int getServerStatus();

    /**
     * <code>int64 time = 6;</code>
     */
    long getTime();

    /**
     * <code>string serverIp = 7;</code>
     */
    String getServerIp();
    /**
     * <code>string serverIp = 7;</code>
     */
    com.google.protobuf.ByteString
        getServerIpBytes();

    /**
     * <code>string serverDesc = 8;</code>
     */
    String getServerDesc();
    /**
     * <code>string serverDesc = 8;</code>
     */
    com.google.protobuf.ByteString
        getServerDescBytes();
  }
  /**
   * <pre>
   * 服务器注册信息
   * </pre>
   *
   * Protobuf type {@code proto.ServerRegistData}
   */
  public  static final class ServerRegistData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:proto.ServerRegistData)
      ServerRegistDataOrBuilder {
    // Use ServerRegistData.newBuilder() to construct.
    private ServerRegistData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ServerRegistData() {
      serverID_ = 0;
      serverName_ = "";
      serverKey_ = "";
      serverType_ = 0;
      serverStatus_ = 0;
      time_ = 0L;
      serverIp_ = "";
      serverDesc_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ServerRegistData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              serverID_ = input.readInt32();
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              serverName_ = s;
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              serverKey_ = s;
              break;
            }
            case 32: {

              serverType_ = input.readInt32();
              break;
            }
            case 40: {

              serverStatus_ = input.readInt32();
              break;
            }
            case 48: {

              time_ = input.readInt64();
              break;
            }
            case 58: {
              String s = input.readStringRequireUtf8();

              serverIp_ = s;
              break;
            }
            case 66: {
              String s = input.readStringRequireUtf8();

              serverDesc_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ReqServerRegist.internal_static_proto_ServerRegistData_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ReqServerRegist.internal_static_proto_ServerRegistData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ServerRegistData.class, Builder.class);
    }

    public static final int SERVERID_FIELD_NUMBER = 1;
    private int serverID_;
    /**
     * <code>int32 serverID = 1;</code>
     */
    public int getServerID() {
      return serverID_;
    }

    public static final int SERVERNAME_FIELD_NUMBER = 2;
    private volatile Object serverName_;
    /**
     * <code>string serverName = 2;</code>
     */
    public String getServerName() {
      Object ref = serverName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        serverName_ = s;
        return s;
      }
    }
    /**
     * <code>string serverName = 2;</code>
     */
    public com.google.protobuf.ByteString
        getServerNameBytes() {
      Object ref = serverName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        serverName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SERVERKEY_FIELD_NUMBER = 3;
    private volatile Object serverKey_;
    /**
     * <code>string serverKey = 3;</code>
     */
    public String getServerKey() {
      Object ref = serverKey_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        serverKey_ = s;
        return s;
      }
    }
    /**
     * <code>string serverKey = 3;</code>
     */
    public com.google.protobuf.ByteString
        getServerKeyBytes() {
      Object ref = serverKey_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        serverKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SERVERTYPE_FIELD_NUMBER = 4;
    private int serverType_;
    /**
     * <code>int32 serverType = 4;</code>
     */
    public int getServerType() {
      return serverType_;
    }

    public static final int SERVERSTATUS_FIELD_NUMBER = 5;
    private int serverStatus_;
    /**
     * <code>int32 serverStatus = 5;</code>
     */
    public int getServerStatus() {
      return serverStatus_;
    }

    public static final int TIME_FIELD_NUMBER = 6;
    private long time_;
    /**
     * <code>int64 time = 6;</code>
     */
    public long getTime() {
      return time_;
    }

    public static final int SERVERIP_FIELD_NUMBER = 7;
    private volatile Object serverIp_;
    /**
     * <code>string serverIp = 7;</code>
     */
    public String getServerIp() {
      Object ref = serverIp_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        serverIp_ = s;
        return s;
      }
    }
    /**
     * <code>string serverIp = 7;</code>
     */
    public com.google.protobuf.ByteString
        getServerIpBytes() {
      Object ref = serverIp_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        serverIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SERVERDESC_FIELD_NUMBER = 8;
    private volatile Object serverDesc_;
    /**
     * <code>string serverDesc = 8;</code>
     */
    public String getServerDesc() {
      Object ref = serverDesc_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        serverDesc_ = s;
        return s;
      }
    }
    /**
     * <code>string serverDesc = 8;</code>
     */
    public com.google.protobuf.ByteString
        getServerDescBytes() {
      Object ref = serverDesc_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        serverDesc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (serverID_ != 0) {
        output.writeInt32(1, serverID_);
      }
      if (!getServerNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, serverName_);
      }
      if (!getServerKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, serverKey_);
      }
      if (serverType_ != 0) {
        output.writeInt32(4, serverType_);
      }
      if (serverStatus_ != 0) {
        output.writeInt32(5, serverStatus_);
      }
      if (time_ != 0L) {
        output.writeInt64(6, time_);
      }
      if (!getServerIpBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, serverIp_);
      }
      if (!getServerDescBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, serverDesc_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (serverID_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, serverID_);
      }
      if (!getServerNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, serverName_);
      }
      if (!getServerKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, serverKey_);
      }
      if (serverType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, serverType_);
      }
      if (serverStatus_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, serverStatus_);
      }
      if (time_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, time_);
      }
      if (!getServerIpBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, serverIp_);
      }
      if (!getServerDescBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, serverDesc_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ServerRegistData)) {
        return super.equals(obj);
      }
      ServerRegistData other = (ServerRegistData) obj;

      boolean result = true;
      result = result && (getServerID()
          == other.getServerID());
      result = result && getServerName()
          .equals(other.getServerName());
      result = result && getServerKey()
          .equals(other.getServerKey());
      result = result && (getServerType()
          == other.getServerType());
      result = result && (getServerStatus()
          == other.getServerStatus());
      result = result && (getTime()
          == other.getTime());
      result = result && getServerIp()
          .equals(other.getServerIp());
      result = result && getServerDesc()
          .equals(other.getServerDesc());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SERVERID_FIELD_NUMBER;
      hash = (53 * hash) + getServerID();
      hash = (37 * hash) + SERVERNAME_FIELD_NUMBER;
      hash = (53 * hash) + getServerName().hashCode();
      hash = (37 * hash) + SERVERKEY_FIELD_NUMBER;
      hash = (53 * hash) + getServerKey().hashCode();
      hash = (37 * hash) + SERVERTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getServerType();
      hash = (37 * hash) + SERVERSTATUS_FIELD_NUMBER;
      hash = (53 * hash) + getServerStatus();
      hash = (37 * hash) + TIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTime());
      hash = (37 * hash) + SERVERIP_FIELD_NUMBER;
      hash = (53 * hash) + getServerIp().hashCode();
      hash = (37 * hash) + SERVERDESC_FIELD_NUMBER;
      hash = (53 * hash) + getServerDesc().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ServerRegistData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ServerRegistData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ServerRegistData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ServerRegistData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ServerRegistData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ServerRegistData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ServerRegistData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ServerRegistData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ServerRegistData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ServerRegistData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ServerRegistData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ServerRegistData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ServerRegistData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 服务器注册信息
     * </pre>
     *
     * Protobuf type {@code proto.ServerRegistData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.ServerRegistData)
        ServerRegistDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ReqServerRegist.internal_static_proto_ServerRegistData_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ReqServerRegist.internal_static_proto_ServerRegistData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ServerRegistData.class, Builder.class);
      }

      // Construct using com.insping.libra.proto.ReqServerRegist.ServerRegistData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        serverID_ = 0;

        serverName_ = "";

        serverKey_ = "";

        serverType_ = 0;

        serverStatus_ = 0;

        time_ = 0L;

        serverIp_ = "";

        serverDesc_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ReqServerRegist.internal_static_proto_ServerRegistData_descriptor;
      }

      public ServerRegistData getDefaultInstanceForType() {
        return ServerRegistData.getDefaultInstance();
      }

      public ServerRegistData build() {
        ServerRegistData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ServerRegistData buildPartial() {
        ServerRegistData result = new ServerRegistData(this);
        result.serverID_ = serverID_;
        result.serverName_ = serverName_;
        result.serverKey_ = serverKey_;
        result.serverType_ = serverType_;
        result.serverStatus_ = serverStatus_;
        result.time_ = time_;
        result.serverIp_ = serverIp_;
        result.serverDesc_ = serverDesc_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ServerRegistData) {
          return mergeFrom((ServerRegistData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ServerRegistData other) {
        if (other == ServerRegistData.getDefaultInstance()) return this;
        if (other.getServerID() != 0) {
          setServerID(other.getServerID());
        }
        if (!other.getServerName().isEmpty()) {
          serverName_ = other.serverName_;
          onChanged();
        }
        if (!other.getServerKey().isEmpty()) {
          serverKey_ = other.serverKey_;
          onChanged();
        }
        if (other.getServerType() != 0) {
          setServerType(other.getServerType());
        }
        if (other.getServerStatus() != 0) {
          setServerStatus(other.getServerStatus());
        }
        if (other.getTime() != 0L) {
          setTime(other.getTime());
        }
        if (!other.getServerIp().isEmpty()) {
          serverIp_ = other.serverIp_;
          onChanged();
        }
        if (!other.getServerDesc().isEmpty()) {
          serverDesc_ = other.serverDesc_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ServerRegistData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ServerRegistData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int serverID_ ;
      /**
       * <code>int32 serverID = 1;</code>
       */
      public int getServerID() {
        return serverID_;
      }
      /**
       * <code>int32 serverID = 1;</code>
       */
      public Builder setServerID(int value) {
        
        serverID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 serverID = 1;</code>
       */
      public Builder clearServerID() {
        
        serverID_ = 0;
        onChanged();
        return this;
      }

      private Object serverName_ = "";
      /**
       * <code>string serverName = 2;</code>
       */
      public String getServerName() {
        Object ref = serverName_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          serverName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string serverName = 2;</code>
       */
      public com.google.protobuf.ByteString
          getServerNameBytes() {
        Object ref = serverName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          serverName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string serverName = 2;</code>
       */
      public Builder setServerName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        serverName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string serverName = 2;</code>
       */
      public Builder clearServerName() {
        
        serverName_ = getDefaultInstance().getServerName();
        onChanged();
        return this;
      }
      /**
       * <code>string serverName = 2;</code>
       */
      public Builder setServerNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        serverName_ = value;
        onChanged();
        return this;
      }

      private Object serverKey_ = "";
      /**
       * <code>string serverKey = 3;</code>
       */
      public String getServerKey() {
        Object ref = serverKey_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          serverKey_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string serverKey = 3;</code>
       */
      public com.google.protobuf.ByteString
          getServerKeyBytes() {
        Object ref = serverKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          serverKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string serverKey = 3;</code>
       */
      public Builder setServerKey(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        serverKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string serverKey = 3;</code>
       */
      public Builder clearServerKey() {
        
        serverKey_ = getDefaultInstance().getServerKey();
        onChanged();
        return this;
      }
      /**
       * <code>string serverKey = 3;</code>
       */
      public Builder setServerKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        serverKey_ = value;
        onChanged();
        return this;
      }

      private int serverType_ ;
      /**
       * <code>int32 serverType = 4;</code>
       */
      public int getServerType() {
        return serverType_;
      }
      /**
       * <code>int32 serverType = 4;</code>
       */
      public Builder setServerType(int value) {
        
        serverType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 serverType = 4;</code>
       */
      public Builder clearServerType() {
        
        serverType_ = 0;
        onChanged();
        return this;
      }

      private int serverStatus_ ;
      /**
       * <code>int32 serverStatus = 5;</code>
       */
      public int getServerStatus() {
        return serverStatus_;
      }
      /**
       * <code>int32 serverStatus = 5;</code>
       */
      public Builder setServerStatus(int value) {
        
        serverStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 serverStatus = 5;</code>
       */
      public Builder clearServerStatus() {
        
        serverStatus_ = 0;
        onChanged();
        return this;
      }

      private long time_ ;
      /**
       * <code>int64 time = 6;</code>
       */
      public long getTime() {
        return time_;
      }
      /**
       * <code>int64 time = 6;</code>
       */
      public Builder setTime(long value) {
        
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 time = 6;</code>
       */
      public Builder clearTime() {
        
        time_ = 0L;
        onChanged();
        return this;
      }

      private Object serverIp_ = "";
      /**
       * <code>string serverIp = 7;</code>
       */
      public String getServerIp() {
        Object ref = serverIp_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          serverIp_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string serverIp = 7;</code>
       */
      public com.google.protobuf.ByteString
          getServerIpBytes() {
        Object ref = serverIp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          serverIp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string serverIp = 7;</code>
       */
      public Builder setServerIp(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        serverIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string serverIp = 7;</code>
       */
      public Builder clearServerIp() {
        
        serverIp_ = getDefaultInstance().getServerIp();
        onChanged();
        return this;
      }
      /**
       * <code>string serverIp = 7;</code>
       */
      public Builder setServerIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        serverIp_ = value;
        onChanged();
        return this;
      }

      private Object serverDesc_ = "";
      /**
       * <code>string serverDesc = 8;</code>
       */
      public String getServerDesc() {
        Object ref = serverDesc_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          serverDesc_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string serverDesc = 8;</code>
       */
      public com.google.protobuf.ByteString
          getServerDescBytes() {
        Object ref = serverDesc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          serverDesc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string serverDesc = 8;</code>
       */
      public Builder setServerDesc(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        serverDesc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string serverDesc = 8;</code>
       */
      public Builder clearServerDesc() {
        
        serverDesc_ = getDefaultInstance().getServerDesc();
        onChanged();
        return this;
      }
      /**
       * <code>string serverDesc = 8;</code>
       */
      public Builder setServerDescBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        serverDesc_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:proto.ServerRegistData)
    }

    // @@protoc_insertion_point(class_scope:proto.ServerRegistData)
    private static final ServerRegistData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ServerRegistData();
    }

    public static ServerRegistData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ServerRegistData>
        PARSER = new com.google.protobuf.AbstractParser<ServerRegistData>() {
      public ServerRegistData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ServerRegistData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ServerRegistData> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<ServerRegistData> getParserForType() {
      return PARSER;
    }

    public ServerRegistData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_ServerRegistData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_ServerRegistData_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\036protos/req_server_regist.proto\022\005proto\"" +
      "\251\001\n\020ServerRegistData\022\020\n\010serverID\030\001 \001(\005\022\022" +
      "\n\nserverName\030\002 \001(\t\022\021\n\tserverKey\030\003 \001(\t\022\022\n" +
      "\nserverType\030\004 \001(\005\022\024\n\014serverStatus\030\005 \001(\005\022" +
      "\014\n\004time\030\006 \001(\003\022\020\n\010serverIp\030\007 \001(\t\022\022\n\nserve" +
      "rDesc\030\010 \001(\tB>\n\027com.insping.libra.protoB\017" +
      "ReqServerRegist\252\002\021LibraClient.protob\006pro" +
      "to3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_proto_ServerRegistData_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_proto_ServerRegistData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_ServerRegistData_descriptor,
        new String[] { "ServerID", "ServerName", "ServerKey", "ServerType", "ServerStatus", "Time", "ServerIp", "ServerDesc", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
